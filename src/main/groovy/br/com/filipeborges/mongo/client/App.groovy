/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package br.com.filipeborges.mongo.client

import br.com.filipeborges.mongo.client.database.Database
import org.bson.Document

class App {

    static void main(String[] args) {
        new App().run()
    }

    void run() {
        Database db = new Database()
        verifyCollectionsMatch("c1", "c2", db)
        pause()
        db.close()
    }

    void assertAllFieldsEquals(List<Document> c1, List<Document> c2) {
        c1.each {
            def f1 = it["f1"]
            def f2 = it["f2"]
            def f3 = it["f3"]
            def f4 = it["f4"]
            boolean hasMatch = (c2.find { it["f1"] == f1 && it["f2"] == f2 && it["f3"] == f3 && it["f4"] == f4 }) != null
            if (!hasMatch) printDocumentInvalidMatch(it)
        }
    }

    void verifyCollectionsMatch(String c1Name, String c2Name, Database db) {
        def c1 = db.getData(c1Name)
        List<Document> docsToSearch = []

        for (int i = 0; i < c1.size(); i++) {
            docsToSearch.add(c1.get(i))
            if (i % 10 == 0) {
                verifyMatch(docsToSearch, c2Name, db)
                docsToSearch = []
            }
        }

        // Remaining
        verifyMatch(docsToSearch, c2Name, db)
    }

    void verifyMatch(List<Document> docsToSearch, String c2, Database db) {
        def filter = [
                "f1": [],
                "f2": [],
                "f3": [],
                "f4": []
        ]

        docsToSearch.each {
            filter["f1"].add(it["f1"])
            filter["f2"].add(it["f2"])
            filter["f3"].add(it["f3"])
            filter["f4"].add(it["f4"])
        }
        def result = db.findFiltered(filter, c2)
        assertAllFieldsEquals(docsToSearch, result)
    }

    void printDocumentInvalidMatch(Document doc) {
        System.out.println("========== Invalid Document Match ==============")
        System.out.println(doc)
    }

    void pause() {
        System.out.println("===== FINISHED =====")
        new Scanner(System.in).nextLine()
    }
}
